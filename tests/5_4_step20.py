"""
В социальных сетях все как обычно: одни люди выкладывают посты, другие их комментируют.
Сервис по сбору аналитики решил найти у кого из владельцев постов самое большое количество уникальных комментаторов.
Ваша задача помочь им в этом и собрать нужную информацию. Для это вам потребуется написать функцию print_statistic,
которая принимает список кортежей. Каждый кортеж состоит из пары значений: автор поста и далее ник пользователя,
оставившего комментарий к этому посту. Комментаторы могут повторяться и комментировать разных авторов.

Функция print_statistic должна посчитать для каждого автора его уникальное количество комментаторов.
Исходя из найденного количества определяется популярность автора.
Чем больше уникальных пользователей прокомментировало автора, тем он считается популярнее.
Затем функция print_statistic должна для каждого автора вывести в порядке уменьшения популярности информацию
в следующем виде

"Количество уникальных комментаторов у <имя героя> - <количество комментаторов>"

На склонение давайте не будем обращать внимание в этой задаче.

В случае одинаковой популярности у нескольких авторов, необходимо ранжировать по алфавитному порядку имени авторов
без учета регистра
"""


def print_statistic(tpl):
    dct = {}
    for key, value in tpl:
        dct.setdefault(key, []).append(value)
        value = set(value)
    res = sorted(dct.items(), key=lambda x: (-len(set(x[1])), x[0].lower()))

    for k, v in res:
        print(f"Количество уникальных комментаторов у {k} - {len(set(v))}")


data = [
    ('karl', 'makron78'),
    ('karl', 'realdonaldtrump'),
    ('qwery07', 'makron78'),
    ('Billy', 'realdonaldtrump'),
    ('Billy', 'realdonaldtrump'),
    ('qwery07', 'joebiden'),
    ('karl', 'joebiden'),
]
print_statistic(data)
